<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--Mybatis에게 Mapper 경로를 적어야 한다.  -->
<mapper namespace="com.example.first_spring.mapper.EmpMapper">
	<select id="getEmpList" resultType="EmpVO">
	SELECT
		*
	FROM emp
	</select>
	
	<select id="getEmp" resultType="EmpVO">
	SELECT
		ename
	FROM emp
	WHERE empno = #{empNo}
	</select>
	<select id="getName" resultType="EmpVO">
	select
		ename,
		job
	FROM emp
	WHERE ename like "%L%L%"
	</select>
	<select id="getComm" resultType= "EmpVO">
	SELECT
		ename,
		comm
	FROM emp
	WHERE comm is null
	</select>
	<select id="getHiredate" resultType="EmpVO">
	<![CDATA[
	SELECT
		ename,
		hiredate
	FROM emp
	WHERE hiredate >= date_format(HIREDATE,"1980-12-17") 
	AND hiredate <= date_format(HIREDATE,"1982-01-23") 
	]]>
	</select>
	<select id="selectEmpWhereJobAndSal" resultType = "EmpVO">
	SELECT
		empno,
		ename,
		job,
		comm
	FROM emp
	<![CDATA[
	WHERE
	 	job = #{job}
	AND
	 	sal >= #{sal}
	]]>
	</select>
	
	<!-- 문제0번 -->
	<select id="getOverSal" resultType = "EmpVO">
	<![CDATA[
	select
		ename,
		sal
	FROM emp
	WHERE 
	sal >= #{sal}
	and
	(deptno = 10
	or
	deptno = 30)
	]]>
	</select>
	
	<!-- 문제1번 -->
	<select id="getMgrisNull" resultType = "EmpVO">
	SELECT
		ename,
		job,
		sal
	FROM emp
	WHERE
	mgr is null
	</select>
	<!-- 문제2번 -->
	
	<select id="getHiredate1987" resultType = "EmpVO">
	<![CDATA[
	select 
		ename,
		job,
		hiredate,
		sal
	from emp 
	where
	  #{year} = date_format(HIREDATE,'%Y') 
	]]>
	</select>
	
	<!-- 문제3번 -->
	<select id="getMonthDec" resultType = "EmpVO">
	<![CDATA[
	SELECT
		ename,
		sal
	FROM emp
	WHERE
		#{month} = date_format(HIREDATE,'%m')
	]]>
	</select>
	
	<!-- 문제4번 -->
	<select id="getFirstHiredate" resultType = "EmpVO">
	<![CDATA[
	SELECT
		empno,
		ename,
		sal,
		hiredate
	FROM emp
	WHERE
		job = #{job}
	
	
	]]>
	<!-- ORDER BY hiredate asc
	LIMIT 1; -->
	</select>
	
	<!-- 문제 5번 -->
	<select id="getInfo" resultType = "EmpVO">
	SELECT
		*
	FROM emp e
	INNER JOIN dept d
	ON e.deptno = d.deptno
	WHERE empno = #{empno}
	</select>
	
	<!-- Oracle은 Mybatis INSERT할 때 PK문법이 다르다.(시퀀스를 추가해야 함) -->
	<insert id="insertEmp">
	INSERT INTO emp
	(
		empno,
		ename,
		deptno,
		hiredate
	)
	VALUES
	(
		#{empno},
		#{ename},
		#{deptno},
		now()
	)
	</insert>
	
	<delete id="deleteEmp">
		DELETE FROM emp
		WHERE empno = #{empno}
	</delete>
	
	<update id="updateEmp">
	UPDATE emp
	SET
		sal = #{sal}
	WHERE empno = #{empno}
	</update>
	
	<!-- 1. Integer,String 2.VO  처음에는 크게 잡는다.-->
	<select id="selectDeptno" resultType="EmpVO">
		SELECT 
			d.DEPTNO 
		FROM emp as e
		RIGHT JOIN dept as d 
		ON e.DEPTNO = d.DEPTNO 
		WHERE e.EMPNO  is null 
	</select>
	
	<!-- 이중 쿼리를 이용한 방법 -->
	<insert id="allEmp">
	INSERT INTO emp
	(
		empno,
		ename,
		deptno,
		hiredate
	)
	VALUES
	(
		#{empno},
		#{ename},
		(select 
			d.DEPTNO 
			from emp e 
			right join dept d 
			on e.DEPTNO = d.DEPTNO 
			where e.DEPTNO is null
		),
		now()
	)
	</insert>

	<delete id="RemoveSal">
	DELETE FROM emp
	WHERE empno = #{empno}
	</delete>
	
	<select id="CountName" resultType="EmpVO">
	select
		*
	From emp
	where
		ename like CONCAT(#{search},'%')
	</select>
	
	<!-- true가 파라미터로 들어오면 사수 있는 사원조회 -->
	<!-- false가 파라미터로 들어오면 사수가 없는 사원조회 -->
	<!-- mybatis는 boolean(X) 문자로 넘겨줘야 함 -->
	<select id="selectEmpMgr" resultType="EmpVO">
	SELECT
		empno,
		ename,
		mgr
	FROM emp
	WHERE 1=1
	<if test='isMgr.equals("true")'>
		AND mgr IS NOT NULL
	</if>
	<if test='isMgr.equals("false")'>
		AND mgr IS NULL</if>
	</select>
	
	<!-- 문제 1번 -->
	<!-- id 수정할것 -->
	<update id="updateEmpJobSal">
	UPDATE emp
	SET
		job = #{job},
		sal = #{sal}
	WHERE
		empno = #{empno}
	</update>
	
	<!-- 문제 2번 -->
	<select id="selectEmpCommSal" resultType = "EmpVO">
	SELECT
		empno,
		comm,
		sal
	FROM emp
	WHERE
		empno = #{empno}
	</select>
	
	<!-- 문제 2번 -->
	<update id="updateEmpSal">
	UPDATE emp
	SET
		sal = #{sal}
	WHERE
		empno = #{empno}
	</update>
		
	<select id="selectEmpMapList" resultType = "map">
	SELECT
		empno AS 사원번호,
		ename,
		job,
		sal AS 급여,
		e.deptno AS 부서번호,
		d.deptno,
		d.dname,
		d.loc AS 근무지
	FROM emp AS e
	INNER JOIN dept AS d
	ON e.deptno = d.deptno
	</select>
	<select id="TestEmpMap" resultType = "Map">
	SELECT
		empno as 사원번호,
		ename as 사원이름,
		job,
		sal,
		hiredate,
		deptno
	FROM emp
	</select>
	
	
	
	
	
	
	
</mapper>
